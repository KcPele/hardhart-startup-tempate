{
    "address": "0xde43573B38a7adD22136974228E29437Acede570",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "priceFeedAddress",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "FundMe__NotOwner",
            "type": "error"
        },
        {
            "stateMutability": "payable",
            "type": "fallback"
        },
        {
            "inputs": [],
            "name": "MINIMUM_USD",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "cheaperWidthraw",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "fund",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_address",
                    "type": "address"
                }
            ],
            "name": "getAmountToAccountFunded",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_index",
                    "type": "uint256"
                }
            ],
            "name": "getFunders",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getOwner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getPriceFeed",
            "outputs": [
                {
                    "internalType": "contract AggregatorV3Interface",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "stateMutability": "payable",
            "type": "receive"
        }
    ],
    "transactionHash": "0x6999431928ef6260e68711f63231637a95177862ad479aa4fd916be5c4926a1c",
    "receipt": {
        "to": null,
        "from": "0x2Cb1C1935478E3115b7E3F5b4A177ADCcf48ba7f",
        "contractAddress": "0xde43573B38a7adD22136974228E29437Acede570",
        "transactionIndex": 27,
        "gasUsed": "942006",
        "logsBloom": "0x
        "blockHash": "0xb056f3316655a4098882c3533b0b57e899f1b39764345e1aa12ec3fbe709b38f",
        "transactionHash": "0x6999431928ef6260e68711f63231637a95177862ad479aa4fd916be5c4926a1c",
        "logs": [
            {
                "transactionIndex": 27,
                "blockNumber": 26640390,
                "transactionHash": "0x6999431928ef6260e68711f63231637a95177862ad479aa4fd916be5c4926a1c",
                "address": "0x0000000000000000000000000000000000001010",
                "topics": [
                    "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
                    "0x0000000000000000000000000000000000000000000000000000000000001010",
                    "0x0000000000000000000000002cb1c1935478e3115b7e3f5b4a177adccf48ba7f",
                    "0x000000000000000000000000c26880a0af2ea0c7e8130e6ec47af756465452e8"
                ],
                "data": "0x00000000000000000000000000000000000000000000000000085ddfa884060000000000000000000000000000000000000000000000000002b94ca26ad47b90000000000000000000000000000000000000000000000e6008ceb9e39b41d4fa00000000000000000000000000000000000000000000000002b0eec2c2507590000000000000000000000000000000000000000000000e6008d717c343c5dafa",
                "logIndex": 47,
                "blockHash": "0xb056f3316655a4098882c3533b0b57e899f1b39764345e1aa12ec3fbe709b38f"
            }
        ],
        "blockNumber": 26640390,
        "cumulativeGasUsed": "6400428",
        "status": 1,
        "byzantium": true
    },
    "args": ["0x0715A7794a1dc8e42615F059dD6e406A6594651A"],
    "numDeployments": 3,
    "solcInputHash": "f3fd17ab25021d66ee406296c0add279",
    "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWidthraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getAmountToAccountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Kcpele\",\"details\":\"This impliment price feed\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Acontract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This is a crowd funds\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.8;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/**@title Acontract for crowd funding\\n*  @author Kcpele\\n*  @notice This is a crowd funds\\n*  @dev This impliment price feed\\n */\\ncontract FundMe {\\n    //using a library\\n    using PriceConverter for uint256;\\n\\n    //immutable for setting it pemanent after declering it once\\n    address private immutable i_owner;\\n    //constant for setting direct no more changing\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_amountToAccountFunded;\\n\\n    modifier onlyOwner() {\\n        if(msg.sender != i_owner) {\\n            revert FundMe__NotOwner() ;\\n            }\\n        _;\\n\\n    }\\n\\n    \\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n    //when someone sends eth to save the eth the sents\\n    receive() external payable {\\n        fund();\\n    }\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    \\n\\n   function fund() public payable {\\n       //want to be able to set minimun value in usd\\n       require(msg.value.getConvertionRate(s_priceFeed) >= MINIMUM_USD, \\\"You need to send more ETH!\\\");\\n       s_funders.push(msg.sender);\\n       s_amountToAccountFunded[msg.sender] = msg.value;\\n\\n   }\\n\\n   function withdraw() public payable onlyOwner{\\n        for(uint funderIndex =0; funderIndex < s_funders.length; funderIndex++){\\n            delete s_amountToAccountFunded[s_funders[funderIndex]];\\n        }\\n        //reset the array to be blank\\n        delete s_funders;\\n        // funders = new address[](0);\\n        //or loop throug and set the address to address(0)\\n\\n        //sending funds\\n        //transer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // //send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        //call\\n        (bool sent, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(sent, \\\"call failed\\\");\\n    }\\n\\n    \\n function cheaperWidthraw() public payable onlyOwner{\\n     address[] memory funders = s_funders;\\n     for(uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++){\\n         address funder = funders[funderIndex];\\n         s_amountToAccountFunded[funder] = 0;\\n     }\\n     //this is expensive\\n    //  s_funders = new address[](0);\\n    //this is cheaper\\n    delete s_funders;\\n     (bool success, ) = payable(i_owner).call{value: address(this).balance}(\\\"\\\");\\n     require(success);\\n\\n }\\n\\n function getOwner() public view returns(address){\\n     return i_owner;\\n }\\n \\n function getFunders(uint256 _index) public view returns(address){\\n     return s_funders[_index];\\n }\\n\\nfunction getAmountToAccountFunded(address _address) public view returns(uint256){\\n    return s_amountToAccountFunded[_address];\\n}\\nfunction getPriceFeed() public view returns(AggregatorV3Interface){\\n    return s_priceFeed;\\n}\\n\\n}\",\"keccak256\":\"0x639cb4938f6322691f08728e95f905afa7b3c81a274fc4ee0c3b6ae8571418e3\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n//creating a library \\n//they only use internal, no state variable\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns(uint256){\\n       //address 0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n    //    AggregatorV3Interface priceFeed = AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e);\\n       \\n       (, int256 price,,,) = priceFeed.latestRoundData();\\n       return uint256(price * 1e10);\\n       \\n   }\\n\\n\\n   function getVersion() internal view returns (uint){\\n       AggregatorV3Interface version = AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e);\\n       return version.version();\\n\\n   }\\n\\n   function getConvertionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns(uint256) {\\n       uint256 ethPrice = getPrice(priceFeed);\\n       uint256 ethAmountInUsd = (ethAmount * ethPrice) / 1e18;\\n       return ethAmountInUsd;\\n   }\\n}\",\"keccak256\":\"0x67bbf050f76f945910786f9291cb2b6a3bffff747cc70bb456986965cf87b71e\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "0x60a06040523480156200001157600080fd5b50604051620011303803806200113083398181016040528101906200003791906200011f565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000151565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e782620000ba565b9050919050565b620000f981620000da565b81146200010557600080fd5b50565b6000815190506200011981620000ee565b92915050565b600060208284031215620001385762000137620000b5565b5b6000620001488482850162000108565b91505092915050565b60805160601c610fab62000185600039600081816102da0152818161047f0152818161055f01526107550152610fab6000f3fe60806040526004361061007f5760003560e01c8063893d20e81161004e578063893d20e8146101145780639d736cec1461013f5780639e87a5cd1461017c578063b60d4288146101a75761008e565b806308f40e84146100985780633a7b6c74146100a25780633ccfd60b146100df5780636b69a592146100e95761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b6100a06102d8565b005b3480156100ae57600080fd5b506100c960048036038101906100c49190610940565b610515565b6040516100d691906109ae565b60405180910390f35b6100e761055d565b005b3480156100f557600080fd5b506100fe610744565b60405161010b91906109d8565b60405180910390f35b34801561012057600080fd5b50610129610751565b60405161013691906109ae565b60405180910390f35b34801561014b57600080fd5b5061016660048036038101906101619190610a1f565b610779565b60405161017391906109d8565b60405180910390f35b34801561018857600080fd5b506101916107c2565b60405161019e9190610aab565b60405180910390f35b6101af6101b1565b005b6802b5e3af16b18800006101ee60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346107eb90919063ffffffff16565b101561022f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022690610b23565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461035d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156103e157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610397575b5050505050905060005b815181101561046c57600082828151811061040957610408610b43565b5b602002602001015190506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061046490610ba1565b9150506103eb565b506001600061047b91906108c7565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516104c190610c1b565b60006040518083038185875af1925050503d80600081146104fe576040519150601f19603f3d011682016040523d82523d6000602084013e610503565b606091505b505090508061051157600080fd5b5050565b60006001828154811061052b5761052a610b43565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105e2576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561068657600260006001838154811061060a57610609610b43565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055808061067e90610ba1565b9150506105e5565b506001600061069591906108c7565b60003373ffffffffffffffffffffffffffffffffffffffff16476040516106bb90610c1b565b60006040518083038185875af1925050503d80600081146106f8576040519150601f19603f3d011682016040523d82523d6000602084013e6106fd565b606091505b5050905080610741576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073890610c7c565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000806107f783610827565b90506000670de0b6b3a764000082866108109190610c9c565b61081a9190610d25565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561087057600080fd5b505afa158015610884573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a89190610de3565b5050509150506402540be400816108bf9190610e5e565b915050919050565b50805460008255906000526020600020908101906108e591906108e8565b50565b5b808211156109015760008160009055506001016108e9565b5090565b600080fd5b6000819050919050565b61091d8161090a565b811461092857600080fd5b50565b60008135905061093a81610914565b92915050565b60006020828403121561095657610955610905565b5b60006109648482850161092b565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109988261096d565b9050919050565b6109a88161098d565b82525050565b60006020820190506109c3600083018461099f565b92915050565b6109d28161090a565b82525050565b60006020820190506109ed60008301846109c9565b92915050565b6109fc8161098d565b8114610a0757600080fd5b50565b600081359050610a19816109f3565b92915050565b600060208284031215610a3557610a34610905565b5b6000610a4384828501610a0a565b91505092915050565b6000819050919050565b6000610a71610a6c610a678461096d565b610a4c565b61096d565b9050919050565b6000610a8382610a56565b9050919050565b6000610a9582610a78565b9050919050565b610aa581610a8a565b82525050565b6000602082019050610ac06000830184610a9c565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f2073656e64206d6f72652045544821000000000000600082015250565b6000610b0d601a83610ac6565b9150610b1882610ad7565b602082019050919050565b60006020820190508181036000830152610b3c81610b00565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610bac8261090a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610bdf57610bde610b72565b5b600182019050919050565b600081905092915050565b50565b6000610c05600083610bea565b9150610c1082610bf5565b600082019050919050565b6000610c2682610bf8565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c66600b83610ac6565b9150610c7182610c30565b602082019050919050565b60006020820190508181036000830152610c9581610c59565b9050919050565b6000610ca78261090a565b9150610cb28361090a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ceb57610cea610b72565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d308261090a565b9150610d3b8361090a565b925082610d4b57610d4a610cf6565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d7581610d56565b8114610d8057600080fd5b50565b600081519050610d9281610d6c565b92915050565b6000819050919050565b610dab81610d98565b8114610db657600080fd5b50565b600081519050610dc881610da2565b92915050565b600081519050610ddd81610914565b92915050565b600080600080600060a08688031215610dff57610dfe610905565b5b6000610e0d88828901610d83565b9550506020610e1e88828901610db9565b9450506040610e2f88828901610dce565b9350506060610e4088828901610dce565b9250506080610e5188828901610d83565b9150509295509295909350565b6000610e6982610d98565b9150610e7483610d98565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610eb357610eb2610b72565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610ef057610eef610b72565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610f2d57610f2c610b72565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f6a57610f69610b72565b5b82820290509291505056fea26469706673582212208d9012ac8d85824abe048776d3b1405caa1d23683e46f52a269592b7005608fc64736f6c63430008080033",
    "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063893d20e81161004e578063893d20e8146101145780639d736cec1461013f5780639e87a5cd1461017c578063b60d4288146101a75761008e565b806308f40e84146100985780633a7b6c74146100a25780633ccfd60b146100df5780636b69a592146100e95761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b6100a06102d8565b005b3480156100ae57600080fd5b506100c960048036038101906100c49190610940565b610515565b6040516100d691906109ae565b60405180910390f35b6100e761055d565b005b3480156100f557600080fd5b506100fe610744565b60405161010b91906109d8565b60405180910390f35b34801561012057600080fd5b50610129610751565b60405161013691906109ae565b60405180910390f35b34801561014b57600080fd5b5061016660048036038101906101619190610a1f565b610779565b60405161017391906109d8565b60405180910390f35b34801561018857600080fd5b506101916107c2565b60405161019e9190610aab565b60405180910390f35b6101af6101b1565b005b6802b5e3af16b18800006101ee60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346107eb90919063ffffffff16565b101561022f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022690610b23565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461035d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156103e157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610397575b5050505050905060005b815181101561046c57600082828151811061040957610408610b43565b5b602002602001015190506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061046490610ba1565b9150506103eb565b506001600061047b91906108c7565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516104c190610c1b565b60006040518083038185875af1925050503d80600081146104fe576040519150601f19603f3d011682016040523d82523d6000602084013e610503565b606091505b505090508061051157600080fd5b5050565b60006001828154811061052b5761052a610b43565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105e2576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561068657600260006001838154811061060a57610609610b43565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055808061067e90610ba1565b9150506105e5565b506001600061069591906108c7565b60003373ffffffffffffffffffffffffffffffffffffffff16476040516106bb90610c1b565b60006040518083038185875af1925050503d80600081146106f8576040519150601f19603f3d011682016040523d82523d6000602084013e6106fd565b606091505b5050905080610741576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073890610c7c565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000806107f783610827565b90506000670de0b6b3a764000082866108109190610c9c565b61081a9190610d25565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561087057600080fd5b505afa158015610884573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a89190610de3565b5050509150506402540be400816108bf9190610e5e565b915050919050565b50805460008255906000526020600020908101906108e591906108e8565b50565b5b808211156109015760008160009055506001016108e9565b5090565b600080fd5b6000819050919050565b61091d8161090a565b811461092857600080fd5b50565b60008135905061093a81610914565b92915050565b60006020828403121561095657610955610905565b5b60006109648482850161092b565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109988261096d565b9050919050565b6109a88161098d565b82525050565b60006020820190506109c3600083018461099f565b92915050565b6109d28161090a565b82525050565b60006020820190506109ed60008301846109c9565b92915050565b6109fc8161098d565b8114610a0757600080fd5b50565b600081359050610a19816109f3565b92915050565b600060208284031215610a3557610a34610905565b5b6000610a4384828501610a0a565b91505092915050565b6000819050919050565b6000610a71610a6c610a678461096d565b610a4c565b61096d565b9050919050565b6000610a8382610a56565b9050919050565b6000610a9582610a78565b9050919050565b610aa581610a8a565b82525050565b6000602082019050610ac06000830184610a9c565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f2073656e64206d6f72652045544821000000000000600082015250565b6000610b0d601a83610ac6565b9150610b1882610ad7565b602082019050919050565b60006020820190508181036000830152610b3c81610b00565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610bac8261090a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610bdf57610bde610b72565b5b600182019050919050565b600081905092915050565b50565b6000610c05600083610bea565b9150610c1082610bf5565b600082019050919050565b6000610c2682610bf8565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c66600b83610ac6565b9150610c7182610c30565b602082019050919050565b60006020820190508181036000830152610c9581610c59565b9050919050565b6000610ca78261090a565b9150610cb28361090a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ceb57610cea610b72565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d308261090a565b9150610d3b8361090a565b925082610d4b57610d4a610cf6565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d7581610d56565b8114610d8057600080fd5b50565b600081519050610d9281610d6c565b92915050565b6000819050919050565b610dab81610d98565b8114610db657600080fd5b50565b600081519050610dc881610da2565b92915050565b600081519050610ddd81610914565b92915050565b600080600080600060a08688031215610dff57610dfe610905565b5b6000610e0d88828901610d83565b9550506020610e1e88828901610db9565b9450506040610e2f88828901610dce565b9350506060610e4088828901610dce565b9250506080610e5188828901610d83565b9150509295509295909350565b6000610e6982610d98565b9150610e7483610d98565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610eb357610eb2610b72565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610ef057610eef610b72565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610f2d57610f2c610b72565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f6a57610f69610b72565b5b82820290509291505056fea26469706673582212208d9012ac8d85824abe048776d3b1405caa1d23683e46f52a269592b7005608fc64736f6c63430008080033",
    "devdoc": {
        "author": "Kcpele",
        "details": "This impliment price feed",
        "kind": "dev",
        "methods": {},
        "title": "Acontract for crowd funding",
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {},
        "notice": "This is a crowd funds",
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 64,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_priceFeed",
                "offset": 0,
                "slot": "0",
                "type": "t_contract(AggregatorV3Interface)45"
            },
            {
                "astId": 67,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_funders",
                "offset": 0,
                "slot": "1",
                "type": "t_array(t_address)dyn_storage"
            },
            {
                "astId": 71,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_amountToAccountFunded",
                "offset": 0,
                "slot": "2",
                "type": "t_mapping(t_address,t_uint256)"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
            },
            "t_contract(AggregatorV3Interface)45": {
                "encoding": "inplace",
                "label": "contract AggregatorV3Interface",
                "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            }
        }
    }
}
